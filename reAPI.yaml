#file: noinspection SwYamlUnresolvedReferencesInspection
openapi: 3.0.3
info:
  title: Nickname extraction service API
  description: Service for extracting usernames and domains from email addresses
  version: 1.0.0
  contact:
    name: Maxim Berezhnoy
    url: https://github.com
paths:
  /emails/nickname:
    post:
      tags:
        - Nicknames
      summary: Extract a nickname from an email address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextRequest"
      responses:
        200:
          description: Nickname has been successfully extracted
          content:
            application/json:
              schema:
                # noinspection SwYamlUnresolvedReferencesInspection
                $ref: "#components/schemas/NicknameResponse"
        400:
          description: JSON parse error
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorResponse"
        422:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ValidationErrorResponse"

    get:
      tags:
        - Nicknames
      summary: Get nickname request history
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: Page number
      responses:
        200:
          description: Nickname request history has been successfully received
          content:
            application/json:
              schema:
                $ref: "#components/schemas/NicknamesHistoryResponse"
        404:
          description: Page not found
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorResponse"
        422:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ValidationErrorResponse"

  /emails/domain:
    post:
      tags:
        - Domains
      summary: Extract a domain from an email address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextRequest'
      responses:
        200:
          description: Domain has been successfully extracted
          content:
            application/json:
              schema:
                $ref: "#components/schemas/DomainResponse"
        400:
          description: JSON parse error
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorResponse"
        422:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ValidationErrorResponse"

    get:
      tags:
        - Domains
      summary: Get domain request history
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: Page number
      responses:
        200:
          description: Domain request history has been successfully received
          content:
            application/json:
              schema:
                $ref: "#components/schemas/DomainsHistoryResponse"
        404:
          description: Page not found
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ErrorResponse"
        422:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ValidationErrorResponse"

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        detail:
          type: string

    ValidationErrorResponse:
      type: object
      properties:
        errors:
          type: object
          properties:
            text:
              type: array
              items:
                type: string

    TextRequest:
      type: object
      properties:
        text:
          type: string

    NicknameResponse:
      type: object
      properties:
        nickname:
          type: string

    DomainResponse:
      type: object
      properties:
        domain:
          type: string

    NicknamesHistoryResponse:
      type: object
      properties:
        nicknames:
          type: array
          items:
            type: string
        amount:
          type: integer
          format: int32
        total:
          type: integer
          format: int64

    DomainsHistoryResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
        amount:
          type: integer
          format: int32
        total:
          type: integer
          format: int64